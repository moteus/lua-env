PROJECT = 'env'

if LUA_VER == '5.3' then
  LUA_NEED = 'lua53'
  LUA_DIR  = ENV.LUA_DIR_5_3 or ENV.LUA_DIR
  LUA_RUNNER = 'lua53'
elseif LUA_VER == '5.2' then
  LUA_NEED = 'lua52'
  LUA_DIR  = ENV.LUA_DIR_5_2 or ENV.LUA_DIR
  LUA_RUNNER = 'lua52'
else
  LUA_NEED = 'lua51'
  LUA_DIR  = ENV.LUA_DIR
  LUA_RUNNER = 'lua'
end

ROOT    = ROOT or J(LUA_DIR,'libs',PROJECT)
LUADIR  = LUADIR or J(ROOT, 'share')
LIBDIR  = LIBDIR or J(ROOT, 'share')
DYNAMIC = as_bool(DYNAMIC, false)
WINVER  = IF(WINDOWS, WINVER or '501', '')

DEFS = L{
  IF(DEBUG,   {'_DEBUG', 'DEBUG'},'NDEBUG');
  IF(WINDOWS, {'WIN32','_WIN32','_WINDOWS'});
  IF(MSVC,    {'_CRT_SECURE_NO_WARNINGS', '_WIN32_WINNT=0x' .. WINVER});
  IF(WINDOWS, {'ENV_EXPORT_WIN'});
}

env =  c.shared{'core',
  base     = 'src';
  src      = {PROJECT .. '.c'};
  defines  = DEFS;
  needs    = LUA_NEED;
  libs     = IF(WINDOWS, 'user32');
  libflags = IF(MSVC, L{
    '/EXPORT:luaopen_env',
    '/EXPORT:luaopen_env_core',
    '/EXPORT:luaopen_ENV_core',
  });
  dynamic  = DYNAMIC;
}

target('build', env)

install = target('install', {
  file.group{odir=LUADIR;             src = J('lua', '*.*'); recurse = true; };
  file.group{odir=J(LIBDIR, PROJECT); src = env                              };
  file.group{odir=J(ROOT, 'test');    src = J('test','*.*'); recurse = true; };
})

target('test', install, function()
  run_test("test.lua")
end)

default('build')

